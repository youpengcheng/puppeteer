"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[94184],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(67294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,o=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),s=l(r),f=p,d=s["".concat(u,".").concat(f)]||s[f]||m[f]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function f(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=r.length,i=new Array(o);i[0]=s;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:p,i[1]=a;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},6973:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return s}});var n=r(87462),p=r(63366),o=(r(67294),r(3905)),i=["components"],a={},u=void 0,l={unversionedId:"puppeteer.eventemitter.listenercount",id:"puppeteer.eventemitter.listenercount",isDocsHomePage:!1,title:"puppeteer.eventemitter.listenercount",description:"Home &gt; puppeteer &gt; EventEmitter &gt; listenerCount",source:"@site/docs/puppeteer.eventemitter.listenercount.md",sourceDirName:".",slug:"/puppeteer.eventemitter.listenercount",permalink:"/puppeteer/docs/next/puppeteer.eventemitter.listenercount",editUrl:"https://github.com/facebook/puppeteer/edit/main/website/docs/puppeteer.eventemitter.listenercount.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"puppeteer.eventemitter.emit",permalink:"/puppeteer/docs/next/puppeteer.eventemitter.emit"},next:{title:"puppeteer.eventemitter.off",permalink:"/puppeteer/docs/next/puppeteer.eventemitter.off"}},c=[{value:"EventEmitter.listenerCount() method",id:"eventemitterlistenercount-method",children:[]},{value:"Parameters",id:"parameters",children:[]}],m={toc:c};function s(e){var t=e.components,r=(0,p.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/index"},"Home")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/puppeteer"},"puppeteer")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/puppeteer.eventemitter"},"EventEmitter")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/puppeteer.eventemitter.listenercount"},"listenerCount")),(0,o.kt)("h2",{id:"eventemitterlistenercount-method"},"EventEmitter.listenerCount() method"),(0,o.kt)("p",null,"Gets the number of listeners for a given event."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"listenerCount(event: EventType): number;\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"event"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/puppeteer/docs/next/puppeteer.eventtype"},"EventType")),(0,o.kt)("td",{parentName:"tr",align:null},"the event to get the listener count for")))),(0,o.kt)("b",null,"Returns:"),(0,o.kt)("p",null,"number"),(0,o.kt)("p",null,"the number of listeners bound to the given event"))}s.isMDXComponent=!0}}]);