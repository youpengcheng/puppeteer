"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[71533],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,p=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||p;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=n.length,o=new Array(p);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<p;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},98626:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var r=n(87462),a=n(63366),p=(n(67294),n(3905)),o=["components"],i={},l=void 0,s={unversionedId:"puppeteer.page.screenshot",id:"puppeteer.page.screenshot",isDocsHomePage:!1,title:"puppeteer.page.screenshot",description:"Home &gt; puppeteer &gt; Page &gt; screenshot",source:"@site/docs/puppeteer.page.screenshot.md",sourceDirName:".",slug:"/puppeteer.page.screenshot",permalink:"/puppeteer/docs/next/puppeteer.page.screenshot",editUrl:"https://github.com/facebook/puppeteer/edit/main/website/docs/puppeteer.page.screenshot.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"puppeteer.page.reload",permalink:"/puppeteer/docs/next/puppeteer.page.reload"},next:{title:"puppeteer.page.select",permalink:"/puppeteer/docs/next/puppeteer.page.select"}},c=[{value:"Page.screenshot() method",id:"pagescreenshot-method",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Remarks",id:"remarks",children:[]}],u={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,p.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,(0,p.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/index"},"Home")," ",">"," ",(0,p.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/puppeteer"},"puppeteer")," ",">"," ",(0,p.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/puppeteer.page"},"Page")," ",">"," ",(0,p.kt)("a",{parentName:"p",href:"/puppeteer/docs/next/puppeteer.page.screenshot"},"screenshot")),(0,p.kt)("h2",{id:"pagescreenshot-method"},"Page.screenshot() method"),(0,p.kt)("b",null,"Signature:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"screenshot(options?: ScreenshotOptions): Promise<Buffer | string | void>;\n")),(0,p.kt)("h2",{id:"parameters"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,p.kt)("th",{parentName:"tr",align:null},"Type"),(0,p.kt)("th",{parentName:"tr",align:null},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"options"),(0,p.kt)("td",{parentName:"tr",align:null},(0,p.kt)("a",{parentName:"td",href:"/puppeteer/docs/next/puppeteer.screenshotoptions"},"ScreenshotOptions")),(0,p.kt)("td",{parentName:"tr",align:null})))),(0,p.kt)("b",null,"Returns:"),(0,p.kt)("p",null,"Promise","<","Buffer ","|"," string ","|"," void",">"),(0,p.kt)("p",null,"Promise which resolves to buffer or a base64 string (depending on the value of ",(0,p.kt)("inlineCode",{parentName:"p"},"encoding"),") with captured screenshot."),(0,p.kt)("h2",{id:"remarks"},"Remarks"),(0,p.kt)("p",null,"Options object which might have the following properties:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"path")," : The file path to save the image to. The screenshot type will be inferred from file extension. If ",(0,p.kt)("inlineCode",{parentName:"p"},"path")," is a relative path, then it is resolved relative to ",(0,p.kt)("a",{parentName:"p",href:"https://nodejs.org/api/process.html#process_process_cwd"},"current working directory"),". If no path is provided, the image won't be saved to the disk.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"type")," : Specify screenshot type, can be either ",(0,p.kt)("inlineCode",{parentName:"p"},"jpeg")," or ",(0,p.kt)("inlineCode",{parentName:"p"},"png"),". Defaults to 'png'.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"quality")," : The quality of the image, between 0-100. Not applicable to ",(0,p.kt)("inlineCode",{parentName:"p"},"png")," images.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"fullPage")," : When true, takes a screenshot of the full scrollable page. Defaults to ",(0,p.kt)("inlineCode",{parentName:"p"},"false"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"clip")," : An object which specifies clipping region of the page. Should have the following fields:",(0,p.kt)("br",null)," - ",(0,p.kt)("inlineCode",{parentName:"p"},"x")," : x-coordinate of top-left corner of clip area.",(0,p.kt)("br",null)," - ",(0,p.kt)("inlineCode",{parentName:"p"},"y")," : y-coordinate of top-left corner of clip area.",(0,p.kt)("br",null)," - ",(0,p.kt)("inlineCode",{parentName:"p"},"width")," : width of clipping area.",(0,p.kt)("br",null)," - ",(0,p.kt)("inlineCode",{parentName:"p"},"height")," : height of clipping area.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"omitBackground")," : Hides default white background and allows capturing screenshots with transparency. Defaults to ",(0,p.kt)("inlineCode",{parentName:"p"},"false"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"encoding")," : The encoding of the image, can be either base64 or binary. Defaults to ",(0,p.kt)("inlineCode",{parentName:"p"},"binary"),"."))),(0,p.kt)("p",null,"NOTE: Screenshots take at least 1/6 second on OS X. See ",(0,p.kt)("a",{parentName:"p",href:"https://crbug.com/741689"},"https://crbug.com/741689")," for discussion."))}m.isMDXComponent=!0}}]);