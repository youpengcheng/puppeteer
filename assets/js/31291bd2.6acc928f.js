"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[59226],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(67294);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,p=function(e,t){if(null==e)return{};var n,r,p={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(p[n]=e[n]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(p[n]=e[n])}return p}var i=r.createContext({}),a=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},s=function(e){var t=a(e.components);return r.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,p=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=a(n),f=p,m=d["".concat(i,".").concat(f)]||d[f]||l[f]||o;return n?r.createElement(m,u(u({ref:t},s),{},{components:n})):r.createElement(m,u({ref:t},s))}));function f(e,t){var n=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=n.length,u=new Array(o);u[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:p,u[1]=c;for(var a=2;a<o;a++)u[a]=n[a];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},57349:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return a},toc:function(){return s},default:function(){return d}});var r=n(87462),p=n(63366),o=(n(67294),n(3905)),u=["components"],c={},i=void 0,a={unversionedId:"puppeteer.puppeteernodelaunchoptions",id:"version-9.1.1/puppeteer.puppeteernodelaunchoptions",isDocsHomePage:!1,title:"puppeteer.puppeteernodelaunchoptions",description:"Home &gt; puppeteer &gt; PuppeteerNodeLaunchOptions",source:"@site/versioned_docs/version-9.1.1/puppeteer.puppeteernodelaunchoptions.md",sourceDirName:".",slug:"/puppeteer.puppeteernodelaunchoptions",permalink:"/puppeteer/docs/9.1.1/puppeteer.puppeteernodelaunchoptions",editUrl:"https://github.com/facebook/puppeteer/edit/main/website/versioned_docs/version-9.1.1/puppeteer.puppeteernodelaunchoptions.md",version:"9.1.1",frontMatter:{}},s=[{value:"PuppeteerNodeLaunchOptions type",id:"puppeteernodelaunchoptions-type",children:[]}],l={toc:s};function d(e){var t=e.components,n=(0,p.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/puppeteer/docs/9.1.1/index"},"Home")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/puppeteer/docs/9.1.1/puppeteer"},"puppeteer")," ",">"," ",(0,o.kt)("a",{parentName:"p",href:"/puppeteer/docs/9.1.1/puppeteer.puppeteernodelaunchoptions"},"PuppeteerNodeLaunchOptions")),(0,o.kt)("h2",{id:"puppeteernodelaunchoptions-type"},"PuppeteerNodeLaunchOptions type"),(0,o.kt)("p",null,"Utility type exposed to enable users to define options that can be passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"puppeteer.launch")," without having to list the set of all types."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare type PuppeteerNodeLaunchOptions = BrowserLaunchArgumentOptions & LaunchOptions & BrowserConnectOptions;\n")),(0,o.kt)("b",null,"References:")," [BrowserLaunchArgumentOptions](/puppeteer/docs/9.1.1/puppeteer.browserlaunchargumentoptions), [LaunchOptions](/puppeteer/docs/9.1.1/puppeteer.launchoptions), [BrowserConnectOptions](/puppeteer/docs/9.1.1/puppeteer.browserconnectoptions)")}d.isMDXComponent=!0}}]);